to="2016-11-22"
stockID <- c("AMZN", "IBM", "MSFT", "AAPL")
stockName <- c("Amazon", "IBM", "Microsoft", "Apple")
stockType <- rep("stock", length(stockID))
stockSymbols <- data.frame(Ticker = stockID, Name = stockName, Type = stockType,
stringsAsFactors = FALSE)
stockSymbols$Display <- paste(stockSymbols$Ticker, " - ", stockSymbols$Name)
indexID <- c("^DJI", "^IXIC", "^GSPC")
indexName <- c("Dow Industrials", "Nasdaq Composite", "S&P 500")
indexType <- rep("index", length(indexID))
indexSymbols <- data.frame(Ticker = indexID, Name = indexName, Type = indexType,
stringsAsFactors = FALSE)
indexSymbols$Display <- paste(indexSymbols$Ticker, " - ", indexSymbols$Name)
symbols <- rbind(stockSymbols, indexSymbols)
getSymbols(symbols$Ticker, from=from, to=to, src="yahoo", adjust=TRUE)
testTick <- symbols$Ticker
tickerList <- character()
for(tick in testTick)
tickN <- sub("\\^", "", tick)
tickSymbol <- paste0("dt", tickN, "prices")
tickerList <- c(tickerList,tickSymbol)
assign(tickSymbol, as.data.table(eval(as.name(tick))))
for(tick in testTick)
tickN <- sub("\\^", "", tick)
tickSymbol <- paste0("dt", tickN, "prices")
tickerList <- c(tickerList,tickSymbol)
assign(tickSymbol, as.data.table(eval(as.name(tick))))
tickN
rm(list = ls())
library(quantmod)
library(PerformanceAnalytics)
library(TTR)
library(lubridate)
library(plotly)
library(tidyr)
library(dplyr)
library(data.table)
library(dtplyr)
from="2008-01-01"
to="2016-11-22"
stockID <- c("AMZN", "IBM", "MSFT", "AAPL")
stockName <- c("Amazon", "IBM", "Microsoft", "Apple")
stockType <- rep("stock", length(stockID))
stockSymbols <- data.frame(Ticker = stockID, Name = stockName, Type = stockType,
stringsAsFactors = FALSE)
stockSymbols$Display <- paste(stockSymbols$Ticker, " - ", stockSymbols$Name)
indexID <- c("^DJI", "^IXIC", "^GSPC")
indexName <- c("Dow Industrials", "Nasdaq Composite", "S&P 500")
indexType <- rep("index", length(indexID))
indexSymbols <- data.frame(Ticker = indexID, Name = indexName, Type = indexType,
stringsAsFactors = FALSE)
indexSymbols$Display <- paste(indexSymbols$Ticker, " - ", indexSymbols$Name)
symbols <- rbind(stockSymbols, indexSymbols)
getSymbols(symbols$Ticker, from=from, to=to, src="yahoo", adjust=TRUE)
testTick <- "AMZN"
tickerList <- character()
for(tick in testTick)
tickN <- sub("\\^", "", tick)
tickSymbol <- paste0("dt", tickN, "prices")
tickerList <- c(tickerList,tickSymbol)
assign(tickSymbol, as.data.table(eval(as.name(tick))))
eval(as.name(tickSymbol))[,ID := tickN]
oldColNames <- names(eval(as.name(tickSymbol)))
newColNames <- c("Date", "Open", "High", "Low", "Close", "Volume", "Adjusted", "ID")
setnames(eval(as.name(tickSymbol)), oldColNames, newColNames)
colOrder <- c("Date", "ID","Open", "High", "Low", "Close", "Volume", "Adjusted")
setcolorder(eval(as.name(tickSymbol)), colOrder)
eval(as.name(tickSymbol))[, `:=` (Volume = NULL,
Adjusted = NULL)]
dtAMZNprices
symbols$Ticker
textTick <- gsub("\\^", "", symbols$Ticker)
textTick
textTick <- gsub("\\^", "", symbols$Ticker)
tickerList <- character()
for(tick in testTick)
tickSymbol <- paste0("dt", tick, "prices")
tickerList <- c(tickerList,tickSymbol)
assign(tickSymbol, as.data.table(eval(as.name(tick))))
eval(as.name(tickSymbol))[,ID := tick]
oldColNames <- names(eval(as.name(tickSymbol)))
newColNames <- c("Date", "Open", "High", "Low", "Close", "Volume", "Adjusted", "ID")
setnames(eval(as.name(tickSymbol)), oldColNames, newColNames)
colOrder <- c("Date", "ID","Open", "High", "Low", "Close", "Volume", "Adjusted")
setcolorder(eval(as.name(tickSymbol)), colOrder)
eval(as.name(tickSymbol))[, `:=` (Volume = NULL,
Adjusted = NULL)]
testTick
textTick <- gsub("\\^", "", symbols$Ticker)
testTick <- gsub("\\^", "", symbols$Ticker)
testTick
tickerList <- character()
for(tick in testTick)
tickSymbol <- paste0("dt", tick, "prices")
tickerList <- c(tickerList,tickSymbol)
assign(tickSymbol, as.data.table(eval(as.name(tick))))
eval(as.name(tickSymbol))[,ID := tick]
oldColNames <- names(eval(as.name(tickSymbol)))
newColNames <- c("Date", "Open", "High", "Low", "Close", "Volume", "Adjusted", "ID")
setnames(eval(as.name(tickSymbol)), oldColNames, newColNames)
colOrder <- c("Date", "ID","Open", "High", "Low", "Close", "Volume", "Adjusted")
setcolorder(eval(as.name(tickSymbol)), colOrder)
eval(as.name(tickSymbol))[, `:=` (Volume = NULL,
Adjusted = NULL)]
testTick
dtAMZNprices
tick
tickerList
tickSymbol
testTick
dtGSPCprices
dtIBMprices
rm(list = ls())
library(quantmod)
library(PerformanceAnalytics)
library(TTR)
library(lubridate)
library(plotly)
library(tidyr)
library(dplyr)
library(data.table)
library(dtplyr)
from="2008-01-01"
to="2016-11-22"
stockID <- c("AMZN", "IBM", "MSFT", "AAPL")
stockName <- c("Amazon", "IBM", "Microsoft", "Apple")
stockType <- rep("stock", length(stockID))
stockSymbols <- data.frame(Ticker = stockID, Name = stockName, Type = stockType,
stringsAsFactors = FALSE)
stockSymbols$Display <- paste(stockSymbols$Ticker, " - ", stockSymbols$Name)
indexID <- c("^DJI", "^IXIC", "^GSPC")
indexName <- c("Dow Industrials", "Nasdaq Composite", "S&P 500")
indexType <- rep("index", length(indexID))
indexSymbols <- data.frame(Ticker = indexID, Name = indexName, Type = indexType,
stringsAsFactors = FALSE)
indexSymbols$Display <- paste(indexSymbols$Ticker, " - ", indexSymbols$Name)
symbols <- rbind(stockSymbols, indexSymbols)
getSymbols(symbols$Ticker, from=from, to=to, src="yahoo", adjust=TRUE)
testTick <- c("AMZN", "IBM")
testTick
tickerList <- character()
for(tick in testTick)
tickSymbol <- paste0("dt", tick, "prices")
tickSymbol
tickSymbol <- paste0("dt", tick, "prices")
tickerList <- c(tickerList,tickSymbol)
assign(tickSymbol, as.data.table(eval(as.name(tick))))
eval(as.name(tickSymbol))[,ID := tick]
oldColNames <- names(eval(as.name(tickSymbol)))
newColNames <- c("Date", "Open", "High", "Low", "Close", "Volume", "Adjusted", "ID")
setnames(eval(as.name(tickSymbol)), oldColNames, newColNames)
colOrder <- c("Date", "ID","Open", "High", "Low", "Close", "Volume", "Adjusted")
setcolorder(eval(as.name(tickSymbol)), colOrder)
eval(as.name(tickSymbol))[, `:=` (Volume = NULL,
Adjusted = NULL)]
tickerList
rm(list = ls())
from="2008-01-01"
to="2016-11-22"
stockID <- c("AMZN", "IBM", "MSFT", "AAPL")
stockName <- c("Amazon", "IBM", "Microsoft", "Apple")
stockType <- rep("stock", length(stockID))
stockSymbols <- data.frame(Ticker = stockID, Name = stockName, Type = stockType,
stringsAsFactors = FALSE)
stockSymbols$Display <- paste(stockSymbols$Ticker, " - ", stockSymbols$Name)
indexID <- c("^DJI", "^IXIC", "^GSPC")
indexName <- c("Dow Industrials", "Nasdaq Composite", "S&P 500")
indexType <- rep("index", length(indexID))
indexSymbols <- data.frame(Ticker = indexID, Name = indexName, Type = indexType,
stringsAsFactors = FALSE)
indexSymbols$Display <- paste(indexSymbols$Ticker, " - ", indexSymbols$Name)
symbols <- rbind(stockSymbols, indexSymbols)
getSymbols(symbols$Ticker, from=from, to=to, src="yahoo", adjust=TRUE)
testTick <- c("AMZN", "IBM")
testTick
tickerList <- character()
tickerList
for(tick in testTick)
tickSymbol <- paste0("dt", tick, "prices")
tickerList <- c(tickerList,tickSymbol)
assign(tickSymbol, as.data.table(eval(as.name(tick))))
eval(as.name(tickSymbol))[,ID := tick]
oldColNames <- names(eval(as.name(tickSymbol)))
newColNames <- c("Date", "Open", "High", "Low", "Close", "Volume", "Adjusted", "ID")
setnames(eval(as.name(tickSymbol)), oldColNames, newColNames)
colOrder <- c("Date", "ID","Open", "High", "Low", "Close", "Volume", "Adjusted")
setcolorder(eval(as.name(tickSymbol)), colOrder)
eval(as.name(tickSymbol))[, `:=` (Volume = NULL,
Adjusted = NULL)]
`for`
?`for`
rm(list = ls())
from="2008-01-01"
to="2016-11-22"
# symbols <- c("XLB", #SPDR Materials sector
#              "XLE", #SPDR Energy sector
#              "XLF", #SPDR Financial sector
#              "XLP", #SPDR Consumer staples sector
#              "XLI", #SPDR Industrial sector
#              "XLU", #SPDR Utilities sector
#              "XLV", #SPDR Healthcare sector
#              "XLK", #SPDR Tech sector
#              "XLY", #SPDR Consumer discretionary sector
#              "RWR", #SPDR Dow Jones REIT ETF
#
#              "EWJ", #iShares Japan
#              "EWG", #iShares Germany
#              "EWU", #iShares UK
#              "EWC", #iShares Canada
#              "EWY", #iShares South Korea
#              "EWA", #iShares Australia
#              "EWH", #iShares Hong Kong
#              "EWS", #iShares Singapore
#              "IYZ", #iShares U.S. Telecom
#              "EZU", #iShares MSCI EMU ETF
#              "IYR", #iShares U.S. Real Estate
#              "EWT", #iShares Taiwan
#              "EWZ", #iShares Brazil
#              "EFA", #iShares EAFE
#              "IGE", #iShares North American Natural Resources
#              "EPP", #iShares Pacific Ex Japan
#              "LQD", #iShares Investment Grade Corporate Bonds
#              "SHY", #iShares 1-3 year TBonds
#              "IEF", #iShares 3-7 year TBonds
#              "TLT" #iShares 20+ year Bonds
# )
# symbols <- c("AMZN", "^DJI", "^IXIC", "^GSPC")
stockID <- c("AMZN", "IBM", "MSFT", "AAPL")
stockName <- c("Amazon", "IBM", "Microsoft", "Apple")
stockType <- rep("stock", length(stockID))
stockSymbols <- data.frame(Ticker = stockID, Name = stockName, Type = stockType,
stringsAsFactors = FALSE)
stockSymbols$Display <- paste(stockSymbols$Ticker, " - ", stockSymbols$Name)
indexID <- c("^DJI", "^IXIC", "^GSPC")
indexName <- c("Dow Industrials", "Nasdaq Composite", "S&P 500")
indexType <- rep("index", length(indexID))
indexSymbols <- data.frame(Ticker = indexID, Name = indexName, Type = indexType,
stringsAsFactors = FALSE)
indexSymbols$Display <- paste(indexSymbols$Ticker, " - ", indexSymbols$Name)
symbols <- rbind(stockSymbols, indexSymbols)
getSymbols(symbols$Ticker, from=from, to=to, src="yahoo", adjust=TRUE)
testTick <- gsub("\\^", "", symbols$Ticker)
tickerList <- character()
for(tick in testTick) {
# tickN <- sub("\\^", "", tick)
tickSymbol <- paste0("dt", tick, "prices")
tickerList <- c(tickerList,tickSymbol)
assign(tickSymbol, as.data.table(eval(as.name(tick))))
eval(as.name(tickSymbol))[,ID := tick]
oldColNames <- names(eval(as.name(tickSymbol)))
newColNames <- c("Date", "Open", "High", "Low", "Close", "Volume", "Adjusted", "ID")
setnames(eval(as.name(tickSymbol)), oldColNames, newColNames)
colOrder <- c("Date", "ID","Open", "High", "Low", "Close", "Volume", "Adjusted")
setcolorder(eval(as.name(tickSymbol)), colOrder)
eval(as.name(tickSymbol))[, `:=` (Volume = NULL,
Adjusted = NULL)]
}
tickerList
dtAMZNprices
tickerList
dtIBMprices
tickerList
list(tickerList)
as.list(tickerList)
dtPriceData <- rbindlist(as.list(tickerList))
tickerList
dtPriceData <- rbind(tickerList)
dtPriceData
dtPriceData <- list()
dtPriceData
rm(dtPriceData)
tickerDTlist <- list()
for(tick in testTick) {
# tickN <- sub("\\^", "", tick)
tickSymbol <- paste0("dt", tick, "prices")
tickerList <- c(tickerList,tickSymbol)
assign(tickSymbol, as.data.table(eval(as.name(tick))))
eval(as.name(tickSymbol))[,ID := tick]
oldColNames <- names(eval(as.name(tickSymbol)))
newColNames <- c("Date", "Open", "High", "Low", "Close", "Volume", "Adjusted", "ID")
setnames(eval(as.name(tickSymbol)), oldColNames, newColNames)
colOrder <- c("Date", "ID","Open", "High", "Low", "Close", "Volume", "Adjusted")
setcolorder(eval(as.name(tickSymbol)), colOrder)
eval(as.name(tickSymbol))[, `:=` (Volume = NULL,
Adjusted = NULL)]
tickerDTlist <- as.list(tickerDTlist, eval(as.name(tickSymbol)))
}
tickerDTlist
?list
?lapply
tickerList
tickerList <- tickerList[1:7]
tickerList
dtPriceData <- lapply(tickerList, function(x) eval(as.name(x)))
dtPriceData
rm(dtPriceData)
lstPriceData <- lapply(tickerList, function(x) eval(as.name(x)))
dtPriceDAta <- rbind(lstPriceData)
dtPriceDAta
rm(dtPriceDAta)
dtPriceData <- rbindlist(lstPriceData)
dtPriceData
pickYear <- "2016"
pickID <- "IBM"
dtSelect <- data.table(year(Date) == pickYear, ID == pickID)
dtSelect <- data.table(Date == pickYear, ID == pickID)
dtSelect <- data.table(Date = pickYear, ID = pickID)
dtSelect
dtPriceData[dtSelect, on = c("Date", "ID")]
dtSelect <- data.table(Date = as.date(pickYear), ID = pickID)
?date
dtSelect <- data.table(Date = as_date(pickYear), ID = pickID)
as_date(pickYear)
as_date(year(pickYear))
dtPriceData[,Year = year(date)]
dtPriceData
dtPriceData[,Year = year(Date)]
dtPriceData[,Year := year(Date)]
dtPriceData
dtSelect <- data.table(Year = pickYear, ID = pickID)
dtSelect
dtPriceData[dtSelect, on = c("Year", "ID")]
pickYear <- as.IDate("2016")
pickYear <- Year("2016")
pickYear <- as.IDate("2016", format = "%Y")
pickYear
pickYear <- as.IDate("2014", format = "%Y")
pickYear
dtSelect <- data.table(Year = Year(pickYear), ID = pickID)
dtSelect <- data.table(Year = year(pickYear), ID = pickID)
dtSelect
dtPriceData[dtSelect, on = c("Year", "ID")]
tempYear <- "2014"
pickYear <- as.IDate(tempYear, format = "%Y")
pickID <- "IBM"
dtSelect <- data.table(Year = year(pickYear), ID = pickID)
dtSelect
tempYear <- "2016"
pickYear <- as.IDate(tempYear, format = "%Y")
pickID <- "IBM"
dtSelect <- data.table(Year = year(pickYear), ID = pickID)
dtSelect
dtPriceData[dtSelect, on = c("Year", "ID")]
dtPlotSelection <- dtPriceData[dtSelect, on = c("Year", "ID")]
dtPlotSelection
dtPlotSelection[,ID]
dtPlotSelection[,unique(ID)]
issue <- dtPlotSelection[,unique(ID)]
issue
rm(issue)
dRet <- as.vector(periodReturn(eval(as.name(tempID)), period='daily')$daily.returns)
tempID <- dtPlotSelection[,unique(ID)]
dRet <- as.vector(periodReturn(eval(as.name(tempID)), period='daily')$daily.returns)
head(dRet)
length(dRet)
dRet <- as.vector(periodReturn(AMZN, period='daily')$daily.returns)
length(dRet)
temp <- periodReturn(AMZN, period='daily')
temp
hear(temp)
head(temp)
dtPlotSelection
?periodReturn
dtPlotSelection[,Close]
dRet <- as.vector(periodReturn(dtPlotSelection[,Close], period='daily')$daily.returns)
tempClose <- dtPlotSelection[,.(Date,Close)]
tempClose
tempClose <- as.xts(dtPlotSelection[,.(Date,Close)])
tempClose
dRet <- as.vector(periodReturn(tempClose, period='daily')$daily.returns)
head(dRet)
length(dRet)
dtPlotSelection
tempID <- dtPlotSelection[,unique(ID)]
tempClose <- as.xts(dtPlotSelection[,.(Date,Close)])
dRet <- as.vector(periodReturn(tempClose, period='daily')$daily.returns)
dtPlotSelection[,`:=` (dailyRet = dRet,
cumRet = cumsum(dRet),
sma20 = SMA(Close,20),
sma50 = SMA(Close,50),
ema20 = EMA(Close,20),
ema50 = EMA(Close,50))]
dtPlotSelection
tempYear <- "2015"
pickYear <- as.IDate(tempYear, format = "%Y")
pickID <- "AMZN"
dtSelect <- data.table(Year = year(pickYear), ID = pickID)
dtPlotSelection <- dtPriceData[dtSelect, on = c("Year", "ID")]
tempID <- dtPlotSelection[,unique(ID)]
tempClose <- as.xts(dtPlotSelection[,.(Date,Close)])
dRet <- as.vector(periodReturn(tempClose, period='daily')$daily.returns)
dtPlotSelection[,`:=` (dailyRet = dRet,
cumRet = cumsum(dRet),
sma20 = SMA(Close,20),
sma50 = SMA(Close,50),
ema20 = EMA(Close,20),
ema50 = EMA(Close,50))]
dtPlotSelection
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = "none") %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
tempYear <- "2014"
pickYear <- as.IDate(tempYear, format = "%Y")
pickID <- "AMZN"
dtSelect <- data.table(Year = year(pickYear), ID = pickID)
dtPlotSelection <- dtPriceData[dtSelect, on = c("Year", "ID")]
tempID <- dtPlotSelection[,unique(ID)]
tempClose <- as.xts(dtPlotSelection[,.(Date,Close)])
dRet <- as.vector(periodReturn(tempClose, period='daily')$daily.returns)
dtPlotSelection[,`:=` (dailyRet = dRet,
cumRet = cumsum(dRet),
sma20 = SMA(Close,20),
sma50 = SMA(Close,50),
ema20 = EMA(Close,20),
ema50 = EMA(Close,50))]
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = "none") %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
?hoverinfo
help(package = "plotly")
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen")) %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = "none") %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = "none") %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open, hoverinfo = ~Low) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = Date) %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open, hoverinfo = ~Low) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = ~Date) %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open, hoverinfo = ~Low) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = ~Date) %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open, hoverinfo = ymin) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = ~Date) %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open, hoverinfo = yend) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = ~Date) %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open, hoverinfo = ~yend) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = ~Date) %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open, hoverinfo = ~Low) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = ~Date) %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open, hoverinfo = ~Close) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = ~Date) %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
plot_ly(dtPlotSelection, x = ~Date, xend = ~Date,
colors = c("red", "forestgreen"), hoverinfo = "Date") %>%
add_segments(y = ~Low, yend = ~High, size = I(1), color = ~Close > Open) %>%
add_segments(y = ~Open, yend = ~Close, size = I(6), color = ~Close > Open) %>%
add_lines(y = ~sma20, color = I("orange")) %>%
add_lines(y = ~sma50, color = I("blue")) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price"))
