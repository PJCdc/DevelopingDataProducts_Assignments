getwd()
q()
update.packages(checkBuilt=TRUE, ask=FALSE)
q()
library(installr
library(installr)
installr()
q()
install.packages(c("abcrf", "caret", "choroplethr", "curl", "devtools", "digest", "fields", "ggalt", "ggmap", "ggthemes", "htmltools", "httr", "kernlab", "knitr", "maps", "memoise", "mgcv", "multcomp", "mvtnorm", "nlme", "phangorn", "R6", "rattle", "Rcpp", "RcppArmadillo", "RcppEigen", "rgl", "rmarkdown", "rstudioapi", "shiny", "shinyjs", "statmod", "storr", "TH.data", "tidyr", "urca", "V8", "viridis", "vtreat"))
install.packages("seasonal")
install.packages(c("DiagrammeR", "mvtnorm", "nnet", "statmod", "visNetwork"))
library(ggextra)
library(ggExtra)
install.packages("ggExtra")
install.packages("rio")
install.packages("pdftables")
install.packages("rbokeh")
install.packages("bayesboot")
f <- function(...) print(..2)
f(1,2,3)
f(1,20,3)
?scale
install.packages("matrixStats")
help(pckage  = matrixStats)
help(pckage  = "matrixStats")
help(package  = "matrixStats")
seaaioninfo()
sessioninfo()
sesioninfo()
sescioninfo()
sessioninfo()
session()
?sessionInfo
sessionInfo()
devtools::install_github("hrbrmstr/markdowntemplates")
install.packages("IMP")
install.packages(c("abcrf", "acs", "boot", "choroplethr", "curl", "deldir", "dygraphs", "ggplot2", "ggthemes", "git2r", "gridExtra", "gtable", "h2o", "HDInterval", "Hmisc", "htmlwidgets", "installr", "latticeExtra", "leaflet", "lme4", "maps", "Matrix", "MCMCpack", "mgcv", "mnormt", "msm", "multcomp", "munsell", "nlme", "NLP", "openssl", "packrat", "phytools", "plotly", "quantreg", "R.methodsS3", "R.oo", "RcppArmadillo", "RcppEigen", "RCurl", "readODS", "rgeos", "rlist", "rms", "rneos", "scales", "seasonal", "shiny", "shinyAce", "shinyjs", "sp", "TeachingDemos", "tidyr", "TTR", "V8", "viridis", "withr", "x13binary", "XML", "xtable", "yhatr"))
install.packages(c("htmltools", "MonetDB.R"))
install.packages("tibble")
mwan
mean
class(mean
class(mean)
dgamma
generic(mean)
lm
methods(mean)
methods(dgamma)
methods(lm)
methods(colSums)
methods(means)
methods(mean)
methods(predict)
methods(show
methods(show)
methods(dgamma)
cls
clr
library(rvest)
install.packages("rvest")
library(rvest)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
lego_movie <- read_html("http://www.imdb.com/title/tt1490017/")
lego_movie %>%
html_node("strong span") %>%
html_text() %>%
as.numeric()
lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
lego_movie %>%
html_nodes("table") %>%
.[[3]] %>%
html_table()
lego_movie %>%
html_nodes("#boardsTeaser , td") %>%
html_table()
lego_movie %>%
html_nodes("#boardsTeaser , td") %>%
html_text()
lego_movie %>%
html_nodes("#boardsTeaser , td") %>%
.[[3]] %>%
html_table()
help(package = rvest)
lego_movie %>%
html_nodes("table")  %>%
.[[1]] %>%
html_table()
lego_movie %>%
html_nodes("table")  %>%
.[[2]] %>%
html_table()
lego_movie %>%
html_nodes("table")  %>%
.[[3]] %>%
html_table()
lego_movie %>%
html_nodes("table")  %>%
.[[4]] %>%
html_table()
demo(rvest)
bp09 <- read_html("http://wwwn.cdc.gov/Nchs/Nhanes/2009-2010/BPX_F.htm")
bp09
bp[1]
bp09[1]
bp09[[1]]
bp09[[2]]
bp09
bp09 %>%
html_nodes("#toc") %>%
html_text()
bp09 %>%
html_nodes("#toc li:nth-child(7)") %>%
html_text()
bp09 %>%
html_nodes("li:nth-child(7)") %>%
html_text()
bp09 %>%
html_nodes("li:nth-child(7)") %>%
html_table()
bp09 %>%
html_nodes("li:nth-child(7)") %>%
html_text(,trim = TRUE)
bp09 %>%
html_nodes("li:nth-child(7)") %>%
html_text(trim = TRUE)
bp09 %>%
html_nodes("#CodebookLinks a") %>%
html_text(trim = TRUE)
fields <- bp09 %>%
html_nodes("#CodebookLinks a") %>%
html_text(trim = TRUE)
fields
?strsplit
strsplit(fields,"-")
temp <- strsplit(fields,"-")
temp[1]
temp[1][1]
temp[[1]][1]
temp[[1]][2]
trim(temp[[1]][1])
library(stringi)
help(package = stringi)
stri_extract_all_boundaries(temp[[1]][1])
stri_trim_both(temp[[1]][1])
stri_trim_both(temp[[1]][2])
stri_trim_both(temp)
lapply(temp, tri_trim_both)
lapply(temp, stri_trim_both)
temp[[1]]
temp[[1]][1]
temp2 <- lapply(temp, stri_trim_both)
temp2[[1]]
temp2 <- lapply(temp, stri_trim_both, siplify = TRUE)
temp2 <- lapply(temp, stri_trim_both, simplify = TRUE)
temp2 <- lapply(temp, stri_trim_both(simplify = TRUE))
?lapply
temp2 <- lapply(temp, stri_trim_both, simplify = TRUE)
tempa <- stri_split(temp, "-", simplify = TRUE)
tempa <- stri_split_fixed(temp, "-", simplify = TRUE)
tempa
tempa <- stri_split_fixed(temp, "-")
tempa
temp2[[1]]
temp2 <- lapply(temp, stri_trim_both, simplify = TRUE)
temp2[[1]]
stri_trim_both(temp)
temp2 <- lapply(temp, stri_trim_both)
?lapply
temp2 <- sapply(temp, stri_trim_both)
temp2
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2
temp2[1,]
temp2[,1]
temp2[,2]
T(temp2)
?T
?transform
?transpose
library(dplyr)
?transmute
??transpose
??invert
help(package = dplyr)
help(package = base)
t(temp2)
temp2 <- t(temp2)
temp2
temp2[1,]
temp2[,1]
temp2[,2]
temp
bp09
fields
temp2
names(temp2) <- c("Code", "Descrip")
temp2
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
# Transpose columns and rows
temp2 <- t(temp2)
temp2
?names
temp2 <- as.data.frame(t(temp2))
temp2
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2
class(temp2)
as.data.frame(temp2)
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2 <- t(temp2)
temp2
as.data.frame(temp2)
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2
as.data.frame(t(temp2))
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2
temp2 <- as.data.frame(t(temp2))
temp2
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2
temp2 <- t(temp2)
temp2
temp2 <- as.data.frame(temp2)
temp2
str(temp2)
?as.data.frame
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2
temp2 <- t(temp2)
temp2
temp2 <- as.data.frame(temp2, stringsAsFactors = FALSE)
temp2
temp[1,1]
temp2[1,2]
str(temp2)
names(temp2) <- c("Code", "Descrip")
temp2
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2a$lcode <- temp2[,1]
temp2[,1]
temp2
str(temp2)
class(temp2)
temp2 <- sapply(temp, stri_trim_both)
str(temp2)
class(temp2)
temp2 <- sapply(temp, stri_trim_both)
str(temp2)
class(temp2)
temp2 <- mapply(temp, stri_trim_both)
temp2 <- lapply(temp, stri_trim_both)
temp2 <- sapply(temp, stri_trim_both)
temp2
temp2 <- sapply(temp, stri_trim_both)
temp2
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2
temp <- strsplit(fields,"-")
temp2 <- sapply(temp, stri_trim_both, simplify = TRUE)
temp2
temp[1,]
temp2[1,]
temp2[2,]
temp2aLabels <- temp2[1,]
temp2Descrip <- temp2[2,]
temp2aLabels
temp2Descrip
?data.frame
temp3 <- data.frame("Code" = temp2aLabels, "Descrip" = temp2Descrip)
temp3
temp3[,2]
library(tibble)
install.packages(c("abcrf", "abind", "ape", "bayesboot", "BH", "broom", "car", "caret", "cellranger", "choroplethr", "cluster", "CORElearn", "crayon", "curl", "DBI", "DEoptimR", "descr", "devtools", "DiagrammeR", "digest", "dplyr", "drat", "dygraphs", "energy", "evaluate", "fGarch", "fields", "forecast", "formatR", "formattable", "FSAdata", "geosphere", "ggExtra", "ggthemes", "ghyp", "git2r", "GLDEX", "gplots", "gss", "h2o", "haven", "HDInterval", "highr", "HistData", "Hmisc", "htmlwidgets", "httr", "installr", "irlba", "jsonlite", "kernlab", "knitr", "Lahman", "lazyeval", "leafletR", "lme4", "lubridate", "maps", "Matrix", "matrixStats", "MCMCpack", "mgcv", "mime", "multcomp", "nlme", "numDeriv", "nycflights13", "openssl", "packrat", "phangorn", "phytools", "pipeR", "plotly", "plotrix", "plyr", "psych", "Quandl", "quantmod", "quantreg", "R.utils", "R2HTML", "R6", "rappdirs", "raster", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "rgdal", "rgeos", "rgl", "Rglpk", "rio", "rlist", "rmarkdown", "rms", "robustbase", "rpart.plot", "rstudioapi", "Rsymphony", "rversions", "rvest", "scatterplot3d", "seasonal", "shiny", "shinyjs", "sn", "sp", "statmod", "storr", "stringi", "stringr", "survey", "survival", "swirl", "testthat", "tibble", "tidyr", "tseries", "urltools", "V8", "visNetwork", "vtreat", "withr", "xml2", "zoo"))
library(qunatmod)
library(quantmod)
?quantmod
function(quantmodenv())
function(quantmodenv)
function(quantmod)
methods(quantmod)
AMZN.2016 <- getOptionChain("AMZN", NULL, "2016")
AAPL.OPT <- getOptionChain("AAPL")
AAPL.OPTS <- getOptionChain("AAPL", NULL)
AAPL.2015 <- getOptionChain("AAPL", "2015/2016", src = "yahoo")
AAPL.OPT <- getOptionChain("AMZN")
getSymbols('IBM',src='yahoo')
library(quantmod)
getOptionChain()
getOptionChain
AAPL.OPT <- getOptionChain("AAPL")
Call()
library(leaflet)
healp(package = leaflet)
help(package = leaflet)
help(rexp)
install.packages(c("acepack", "caret", "cluster", "codetools", "colorspace", "curl", "DBI", "drat", "dygraphs", "ecp", "evaluate", "forecast", "foreign", "ggExtra", "ggplot2", "h2o", "haven", "Hmisc", "htmlwidgets", "InformationValue", "installr", "irlba", "jsonlite", "kernlab", "knitr", "lattice", "lubridate", "Matrix", "matrixStats", "MCMCpack", "mgcv", "mnormt", "msm", "openssl", "packrat", "plotly", "proto", "psych", "quantmod", "quantreg", "R.oo", "R.utils", "R6", "Rcpp", "RcppArmadillo", "reshape2", "rgdal", "rgeos", "RgoogleMaps", "rio", "rmarkdown", "rms", "rpart.plot", "Rsymphony", "scales", "selectr", "shiny", "shinydashboard", "shinyjs", "showtext", "spam", "SparseM", "stabledist", "stringi", "survey", "survival", "urca", "urltools", "visNetwork", "vtreat", "XML", "yaml", "yhatr"))
help(package = dplyr)
help(,dots)
ignette("nse")
vignette("nse")
setwd("C:/Users/TCarroll/OneDrive - TMC/GitRepos/DevelopingDataProducts_Assignments")
getwd()
library(quantstrat)
library(PerformanceAnalytics)
library(lubridate)
library(plotly)
from="2008-01-01"
to="2016-11-22"
symbols <- c("AMZN", "^DJI", "^IXIC", "^GSPC")
getSymbols(symbols, from=from, to=to, src="yahoo", adjust=TRUE)
dailyReturnsAMZN <- periodReturn(AMZN,period='daily')
colnames(dailyReturnsAMZN) <- c("dReturnsAMZN")
dailyReturnsDJI <- periodReturn(DJI,period='daily')
colnames(dailyReturnsDJI) <- c("dReturnsDJI")
dailyReturnsNAS <- periodReturn(IXIC,period='daily')
colnames(dailyReturnsNAS) <- c("dReturnsNAS")
dailyReturnsSP <- periodReturn(GSPC,period='daily')
colnames(dailyReturnsSP) <- c("dReturnsSP")
dReturnsSymbols <- cbind(dailyReturnsAMZN, dailyReturnsDJI, dailyReturnsNAS, dailyReturnsSP)
head(dReturnsSymbols)
temp <- close(AMZN[1:10,])
temp <- cl(AMZN[1:10,])
temp <- Cl(AMZN[1:10,])
temp
closeAMZN <- Cl(AMZN[1:10,])
closeDJI <- Cl(DJI[1:10,])
closeNAS <- Cl(IXIC[1:10,])
closeSP <- Cl(GSPC[1:10,])
head(closeNAS)
rm(c(closeAMZN, closeDJI, closeNAS, closeSP))
rm(list = list("closeAMZN", "closeDJI", "closeNAS", "closeSP"))
rm(closeAMZN, closeDJI, closeNAS, closeSP)
dCloseAMZN <- Cl(AMZN[1:10,])
dCloseDJI <- Cl(DJI[1:10,])
dCloseNAS <- Cl(IXIC[1:10,])
dCloseSP <- Cl(GSPC[1:10,])
dCLoseSymbols <- cbind(dailyReturnsAMZN, dailyReturnsDJI, dailyReturnsNAS, dailyReturnsSP)
(dCLoseSymbols)
head(dCLoseSymbols)
dCLoseSymbols <- cbind(dCloseAMZN, dCloseDJI, dCloseNAS, dCloseSP)
head(dCLoseSymbols)
dCLoseSymbols <- as.data.frame(dCLoseSymbols)
head(dCLoseSymbols)
dCLoseSymbols <- cbind(index(dCLoseSymbols), dCloseAMZN, dCloseDJI, dCloseNAS, dCloseSP)
head(dCLoseSymbols)
head(index(dCLoseSymbols))
dCLoseSymbols <- as.data.frame(index(dCLoseSymbols))
head(dCLoseSymbols)
?as.data.frame
dCLoseSymbols <- as.data.frame(dCLoseSymbols) %>% colnames(dCLoseSymbols) <- "Date"
library(magrittr)
dCLoseSymbols <- as.data.frame(dCLoseSymbols) %>% colnames(dCLoseSymbols) <- "Date"
dCLoseSymbols <- as.data.frame(dCLoseSymbols)
colnames(dCLoseSymbols) <- "Date"
head(dCLoseSymbols)
dCLoseSymbols <- as.data.frame(index(dCLoseSymbols))
head(dCLoseSymbols)
rm(dCLoseSymbols)
head(index(dCLoseSymbols))
dCLose <- index(dCLoseSymbols)
dCLoseSymbols <- cbind(dCloseAMZN, dCloseDJI, dCloseNAS, dCloseSP)
head(dCLoseSymbols)
dCLose <- index(dCLoseSymbols)
head(dClose)
dateCLose <- index(dCLoseSymbols)
head(dateCLose)
dCLoseSymbols <- as.data.frame(dCLoseSymbols, row.names = FALSE)
head(dCLoseSymbols)
dateCLose <- as.data.frame(index(dCLoseSymbols, row.names = FALSE
dateCLose <- as.data.frame(index(dCLoseSymbols, row.names = FALSE)
dateCLose <- as.data.frame(index(dCLoseSymbols), row.names = FALSE)
dateCLose <- as.data.frame(index(dCLoseSymbols))
head(dateCLose)
?`xts-package`
dCLoseSymbols <- cbind.xts(dCloseAMZN, dCloseDJI, dCloseNAS, dCloseSP)
dateCLose <- as.data.frame(index(dCLoseSymbols))
head(dateCLose)
colnames(dateCLose) <- "Date"
head(dateCLose)
dCLoseSymbols <- as.data.frame(dCLoseSymbols, row.names = FALSE)
dCLoseSymbols <- cbind(dateCLose, dCLoseSymbols)
head(dCLoseSymbols)
str(dCLoseSymbols)
dCloseAMZN <- Cl(AMZN)
dCloseDJI <- Cl(DJI)
dCloseNAS <- Cl(IXIC)
dCloseSP <- Cl(GSPC)
dCLoseSymbols <- cbind.xts(dCloseAMZN, dCloseDJI, dCloseNAS, dCloseSP)
dateCLose <- as.data.frame(index(dCLoseSymbols))
colnames(dateCLose) <- "Date"
dCLoseSymbols <- as.data.frame(dCLoseSymbols, row.names = FALSE)
dCLoseSymbols <- cbind(dateCLose, dCLoseSymbols)
str(dCLoseSymbols)
