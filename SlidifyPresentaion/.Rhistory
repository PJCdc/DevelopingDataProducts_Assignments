)
str(p)
p$layout
p[[layout()]]
p[[layout]]
p$layout
set.seed( 123 )
x = 1 : 100
y1 = 2*x + rnorm( 100 )
y2 = - 2*x + rnorm( 100 )
axis_template <- list(
showgrid = F ,
zeroline = F ,
nticks = 20 ,
showline = T ,
title = ‘AXIS’ ,
mirror = ‘all’ )
set.seed( 123 )
x = 1 : 100
y1 = 2*x + rnorm( 100 )
y2 = - 2*x + rnorm( 100 )
axis_template <- list(
showgrid = F ,
zeroline = F ,
nticks = 20 ,
showline = T ,
title = "AXIS" ,
mirror = "all")
plot_ly(x = x , y = y1 , type = "scatter" ) %>%
layout(xaxis = axis_template , yaxis = axis_template )
axis_template
library(plotly)
library(RColorBrewer)
year <- c(1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006)
amt <- c(11, 16, 21, 27, 33, 37, 43, 54, 68, 94, 128, 170, 213, 258, 307, 348, 385)
data <- data.frame(year, amt)
data$year <- factor(data$year, levels = data[["year"]])
a <- list(title = "Years",
showline = TRUE,
showgrid = FALSE,
showticklabels = TRUE,
linecolor = 'black',
linewidth = 1,
autotick = FALSE,
ticks = 'outside',
tickcolor = 'black',
tickwidth = 2,
ticklen = 5,
tickfont = list(family = 'Cambria',
size = 10,
color = 'rgb(82, 82, 82)'))
b <- list(title = "Years",
showline = TRUE,
showgrid = FALSE,
showticklabels = TRUE,
linecolor = 'black',
linewidth = 1,
autotick = FALSE,
ticks = 'outside',
tickcolor = 'black',
tickwidth = 2,
ticklen = 5,
tickfont = list(family = 'Cambria',
size = 10,
color = 'rgb(82, 82, 82)'))
plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d"))) %>%
layout(title = 'Pre-purchase financing poll',
xaxis = a,
yaxis = b)
install.packages(c("BH", "colorspace", "curl", "data.table", "DEoptimR", "ggthemes", "git2r", "hms", "knitr", "Rcpp", "readODS", "rmarkdown", "statmod"))
library(plotly)
library(RColorBrewer)
year <- c(1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006)
amt <- c(11, 16, 21, 27, 33, 37, 43, 54, 68, 94, 128, 170, 213, 258, 307, 348, 385)
data <- data.frame(year, amt)
data$year <- factor(data$year, levels = data[["year"]])
a <- list(title = "Years",
showline = TRUE,
showgrid = FALSE,
showticklabels = TRUE,
linecolor = 'black',
linewidth = 1,
autotick = FALSE,
ticks = 'outside',
tickcolor = 'black',
tickwidth = 2,
ticklen = 5,
tickfont = list(family = 'Cambria',
size = 10,
color = 'rgb(82, 82, 82)'))
b <- list(title = "Years",
showline = TRUE,
showgrid = FALSE,
showticklabels = TRUE,
linecolor = 'black',
linewidth = 1,
autotick = FALSE,
ticks = 'outside',
tickcolor = 'black',
tickwidth = 2,
ticklen = 5,
tickfont = list(family = 'Cambria',
size = 10,
color = 'rgb(82, 82, 82)'))
plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d"))) %>%
layout(title = 'Pre-purchase financing poll',
xaxis = a,
yaxis = b)
layout
?layout
plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d"))) %>%
ployly::layout(title = 'Pre-purchase financing poll',
xaxis = a,
yaxis = b)
plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d"))) %>%
plotly::layout(title = 'Pre-purchase financing poll',
xaxis = a,
yaxis = b)
plotly::layout
layout
a
lengths(a$ticklen)
?lengths
p <- plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d")))
p
str(p)
p$title
p$title <- "Test"
p$title
p
p$title <-
p$title <- NULL
p$title
p$layput
p$layout
p{{layout}}
p[[layout]]
p[layout]
p["layout"]
p[["layout"]]
p$x
p$x["layout"]
class(p$x)
lengths(p$x)
plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d"))) %>%
layout(title = 'Pre-purchase financing poll',
xaxis = a,
yaxis = b)
p$x
lengths(p$x)
p$x["layout"]
p$x["annotations"]
plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d"))) %>%
layout(title = 'Pre-purchase financing poll',
xaxis = a,
yaxis = b)
lengths(p)
lengths(p$x)
class(p$x)
p$x[["layout"]]$title <- "test"
lengths(p$x[["layout"]])
p <- plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d")))
p
p$x[["layout"]]$title <- "test"
p
Sys.getenv()
p$annotations
lengths(p$annotations)
p$annotations <- ""
lengths(p$annotations)
lengths(p$x)
p$annotations <- "A"
lengths(p$x)
lengths(p$annotations)
p$x[["annotations"]] <- "A"
lengths(p$annotations)
lengths(p$x)
plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d"))) %>%
layout(title = 'Pre-purchase financing poll',
xaxis = a,
yaxis = b)
p <- plot_ly(mpg, x = ~cty, y = ~hwy, alpha = 0.3)
subplot(
add_markers(p, symbol = ~cyl, name = "A single trace"),
add_markers(p, symbol = ~factor(cyl), color = I("black"))
)
library(quantmod)
msft <- getSymbols("MSFT", auto.assign = F)
dat <- as.data.frame(msft)
dat$date <- index(msft)
dat <- subset(dat, date >= "2016-01-01")
names(dat) <- sub("^MSFT\\.", "", names(dat))
plot_ly(dat, x = ~date, xend = ~date, color = ~Close > Open,
colors = c("red", "forestgreen"), hoverinfo = "none") %>%
add_segments(y = ~Low, yend = ~High, size = I(1)) %>%
add_segments(y = ~Open, yend = ~Close, size = I(3)) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price")) %>%
rangeslider()
help(package = installr )
library("installr")
version
Sys.info()
Rprofile.site
R_LIBS
help(package = baseenv())
help(package = base)
env.profile()
environment()
environment.variables
R.home()
r_libs
r_libs()
R_libs()
.libPaths
.libPaths()
.Library()
R_LIBS_USER
.Renviron
.Renviron()
R_HOME()
R_HOME
R.home()
Sys.getenv()
install.packages("data.table")
version
library(plotly)
library(dplyr)
p <- plot_ly(economics,
type = "scatter",
x = ~date,
y = ~uempmed,
name = "unemployment",
marker = list(
color="#264E86"
)) %>%
add_trace(x = ~date, y = ~fitted((loess(uempmed ~ as.numeric(date)))),
mode = 'lines',
line = list(
color = "#5E88FC",
dash = "dashed"
)
p <- plot_ly(economics,
type = "scatter",
x = ~date,
y = ~uempmed,
name = "unemployment",
marker = list(
color="#264E86"
)) %>%
add_trace(x = ~date, y = ~fitted((loess(uempmed ~ as.numeric(date)))),
mode = 'lines',
line = list(
color = "#5E88FC",
dash = "dashed"
)
) %>%
# layout(p,
#   title = list("Unemployment"),
#   xaxis = list(
#     title = "Time",
#     showgrid = F),
#   yaxis = list(
#     title = "uidx")
#   )
layout(p,
list(title = "Unemployment",
xaxis = list(
title = "Time",
showgrid = F),
yaxis = list(
title = "uidx"))
p <- plot_ly(economics,
type = "scatter",
x = ~date,
y = ~uempmed,
name = "unemployment",
marker = list(
color="#264E86"
)) %>%
add_trace(x = ~date, y = ~fitted((loess(uempmed ~ as.numeric(date)))),
mode = 'lines',
line = list(
color = "#5E88FC",
dash = "dashed"
)
) %>%
# layout(p,
#   title = list("Unemployment"),
#   xaxis = list(
#     title = "Time",
#     showgrid = F),
#   yaxis = list(
#     title = "uidx")
#   )
layout(p,
list(title = "Unemployment",
xaxis = list(
title = "Time",
showgrid = F),
yaxis = list(
title = "uidx"))
)
library(plotly)
library(RColorBrewer)
year <- c(1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006)
amt <- c(11, 16, 21, 27, 33, 37, 43, 54, 68, 94, 128, 170, 213, 258, 307, 348, 385)
data <- data.frame(year, amt)
data$year <- factor(data$year, levels = data[["year"]])
a <- list(title = "Years",
showline = TRUE,
showgrid = FALSE,
showticklabels = TRUE,
linecolor = 'black',
linewidth = 1,
autotick = FALSE,
ticks = 'outside',
tickcolor = 'black',
tickwidth = 2,
ticklen = 5,
tickfont = list(family = 'Cambria',
size = 10,
color = 'rgb(82, 82, 82)'))
b <- list(title = "Years",
showline = TRUE,
showgrid = FALSE,
showticklabels = TRUE,
linecolor = 'black',
linewidth = 1,
autotick = FALSE,
ticks = 'outside',
tickcolor = 'black',
tickwidth = 2,
ticklen = 5,
tickfont = list(family = 'Cambria',
size = 10,
color = 'rgb(82, 82, 82)'))
plot_ly(data, x = ~year,
y = ~amt,
name= '',
type='scatter',
mode = 'lines+markers',
line = list(color = toRGB('#964f4d')),
marker = list(color = toRGB("#964f4d"))) %>%
layout(title = 'Pre-purchase financing poll',
xaxis = a,
yaxis = b)
library(quantmod)
msft <- getSymbols("MSFT", auto.assign = F)
dat <- as.data.frame(msft)
dat$date <- index(msft)
dat <- subset(dat, date >= "2016-01-01")
names(dat) <- sub("^MSFT\\.", "", names(dat))
plot_ly(dat, x = ~date, xend = ~date, color = ~Close > Open,
colors = c("red", "forestgreen"), hoverinfo = "none") %>%
add_segments(y = ~Low, yend = ~High, size = I(1)) %>%
add_segments(y = ~Open, yend = ~Close, size = I(3)) %>%
layout(showlegend = FALSE, yaxis = list(title = "Price")) %>%
rangeslider()
?seq
seq(0, 1, length.out = 11)
library(quantmod)
library(lubridate)
library(plotly)
library(tidyr)
library(PerformanceAnalytics)
library(dplyr)
help(package = "quantmod")
help(package = "PerformanceAnalytics")
help("moving average")
??"moving average"
library(TTR)
help(package = "TTR")
data(ttrc)
ema.20 <-   EMA(ttrc[,"Close"], 20)
sma.20 <-   SMA(ttrc[,"Close"], 20)
ema.20[15:25,]
ema.20[15:25]
T3 <- function(x, n=10, v=1) DEMA(DEMA(DEMA(x,n,v),n,v),n,v)
t3 <- T3(ttrc[,"Close"])
t3
Sys.getenv()
?Sys.setenv
Sys.setenv(R_LIBS_USER = "C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3")
Sys.getenv()
.libPaths()
Sys.setenv(R_LIBS_USER = "C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3")
Sys.getenv()
.libPaths()
?.libPaths
Sys.setenv(R_LIBS_USER = "C:\Users\TCarroll\OneDrive - TMC\R\win-library\3.3")
getwd()
Sys.getenv()
?Sys.setenv
Sys.unsetenv(R_LIBS_USER)
Sys.unsetenv("R_LIBS_USER")
Sys.getenv()
Sys.setenv(R_LIBS_USER = "C:\Users\TCarroll\OneDrive - TMC\R\win-library\3.3")
Sys.setenv(R_LIBS_USER = ""C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3"")
Sys.setenv(R_LIBS_USER = "C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3")
Sys.getenv()
.libPaths()
?.libPaths
.Library
.libPaths(new = "C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3")
.libPaths()
Sys.getenv()
.libPaths()
Sys.setenv(R_LIBS_SITE = "C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3")
Sys.getenv()
.libPaths()
.Library.site
Sys.getenv()
.Library.site
.Library.site("C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3")
.Library.site(new = "C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3")
.Library.site <- "C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3"
.Library.site
.libPaths()
?Sys.setenv
R,home
R.home
R.home()
?Rconsole
startup
R_LIB
R_LIBS_USER
readRenviron()
?Sys.setenv
Sys.getenv()
help(package = ggplot2)
.libPaths()
Sys.getenv()
.libPaths()
help(package = "quantmod")
.libPaths()
Sys.getenv()
install.packages(c("abcrf", "ape", "car", "chron", "coda", "colourpicker", "data.table", "Hmisc", "phangorn", "phytools", "rms", "slam", "survey", "V8"), lib="C:/Users/TCarroll/OneDrive - TMC/R/win-library/3.3")
install.packages("replyr")
Sys.getenv()
?install.packages
.libPaths()
Sys.getenv()
?Startup
readRenviron()
?.libPaths
.libPaths()
help(package = "data.table")
library(parallel)
c1 <- detectCores()
c1
setwd("C:/Users/TCarroll/OneDrive - TMC/GitRepos/DevelopingDataProducts_Assignments")
getwd()
library(slidify)
author("Presentation")
help(package = "slidify")
slidifyDefaults()
library(slidify)
slidifyDefaults()
